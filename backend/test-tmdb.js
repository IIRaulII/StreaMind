// Script para probar la conexi√≥n con TMDb
const dotenv = require('dotenv');
const tmdbService = require('./services/tmdbService');

// Cargar variables de entorno
dotenv.config();

async function testTMDB() {
  console.log('üß™ Iniciando pruebas de conexi√≥n con TMDb');
  console.log('--------------------------------------------');
  console.log('API Key configurada:', process.env.TMDB_API_KEY ? '‚úÖ' : '‚ùå');
  console.log('API URL configurada:', process.env.TMDB_API_URL);

  try {
    // Probar b√∫squeda de pel√≠culas
    console.log('\nüìã Prueba de b√∫squeda:');
    const searchQuery = 'matrix';
    console.log(`Buscando "${searchQuery}"...`);
    
    const searchResults = await tmdbService.searchMovies(searchQuery);
    console.log(`Resultados encontrados: ${searchResults.length}`);
    
    if (searchResults.length > 0) {
      const firstMovie = searchResults[0];
      console.log('\nPrimer resultado:');
      console.log(`- T√≠tulo: ${firstMovie.title}`);
      console.log(`- A√±o: ${firstMovie.release_date ? firstMovie.release_date.split('-')[0] : 'N/A'}`);
      console.log(`- ID: ${firstMovie.id}`);
      
      // Probar obtenci√≥n de detalles
      console.log('\nüìã Prueba de detalles:');
      console.log(`Obteniendo detalles para ID: ${firstMovie.id}...`);
      
      const movieDetails = await tmdbService.getMovieDetails(firstMovie.id);
      console.log('\nDetalles obtenidos:');
      console.log(`- T√≠tulo: ${movieDetails.title}`);
      console.log(`- A√±o: ${movieDetails.year}`);
      console.log(`- G√©neros: ${movieDetails.genre.join(', ')}`);
      console.log(`- P√≥ster: ${movieDetails.posterUrl ? '‚úÖ Disponible' : '‚ùå No disponible'}`);
      console.log(`- Sinopsis: ${movieDetails.synopsis.substring(0, 100)}...`);
    }
  } catch (error) {
    console.error('‚ùå Error en las pruebas:', error.message);
  }

  console.log('\n--------------------------------------------');
  console.log('üèÅ Pruebas finalizadas');
}

// Ejecutar pruebas
testTMDB().catch(console.error); 